#!/bin/sh

# VARS

VERSION=0.0.1
CONFIG=~/.config/taskshrc
DEFAULT_FOLDER=~/tasksh

NAME=$(basename "$0")

if [ -f $CONFIG ]; then
    # shellcheck disable=SC1090
    . $CONFIG
else
    touch $CONFIG
fi

# functions

# shellcheck disable=SC2120
help() {

    WHICH=${1:-general}

    case "$WHICH" in

        general )
            echo "Usage: $NAME [mode] [OPTIONS]..."
            echo "Manage (add, edit, view, etc.) tasks."
            echo 
            echo "$NAME has 6 modes, (a)dd, (ag)enda, (c)onfig, (e)dit, (l)ist, and (v)iew"
            echo "each mode has different functionality, to see usage for use:"
            echo "  $NAME [mode] -h"
            echo "  or"
            echo "  $NAME [mode] --help"
            echo
            echo "For example:"
            echo "  $NAME add -h"
            echo "  or for using the add shorthand"
            echo "  $NAME a -h"
            echo
            echo "There is technically a 7th 'no-mode' mode with two options:"
            echo
            echo "Help:"
            echo "  This gets the general help message for $NAME"
            echo
            echo "  $NAME -h"
            echo "  $NAME --help"
            echo 
            echo "Version:"
            echo "  This gets the $NAME version"
            echo
            echo "  $NAME -v"
            echo "  $NAME --version"

        ;;

        add )
            echo add TODO
        ;;

        agenda )
            echo agenda TODO
        ;;

        config ) 
            echo config TODO
        ;;

        edit )
            echo edit TODO
        ;;

        list )
            echo list TODO
        ;;

        view )
            echo view TODO
        ;;
        
        * )
            echo "Unknown help section, ERROR"
            exit 1
    esac

    exit 0
}

default() {
    echo TASKSH v$VERSION

    help
}

configure() {
    # check notes dir
    if [ -z ${TASKSH_DIR+x} ]; then
        echo "TASHSH has no folder set."

        echo "Specify a folder TASKSH should use to store data [$DEFAULT_FOLDER]: " 
        read -r FOLDER
        TASKSH_DIR=${FOLDER:-$DEFAULT_FOLDER}

        if [ ! -d "$TASKSH_DIR" ]; then
            create_tasksh_dir

        elif [ "$(ls -A "$TASKSH_DIR")" ]; then
            echo "$TASKSH_DIR is not empty, are you sure you want to use this folder? y/[n]"

            while true; do
                read -r YN
                case "${YN:-n}" in
                    y ) 
                        echo "Successfully created TASKSH folder ($TASKSH_DIR)"
                        if echo "TASKSH_DIR=\"$TASKSH_DIR\"" >> $CONFIG; then
                            echo "Successfully added TASKSH_DIR to TASKSH config"
                        else
                            echo "FAILED to add TASKSH_DIR to TASKSH config"
                            exit 1
                        fi

                        break
                        ;;

                    n ) 
                        echo "TASKSH requires a folder to function, exiting"

                        exit 1
                        ;;

                    * ) echo "Invalid response, input y or n";;
                esac
            done
        fi
    fi

    if [ ! -d "$TASKSH_DIR" ]; then
        create_tasksh_dir
    fi
}

create_tasksh_dir() {
    echo "$TASKSH_DIR does not exist, would you like to create it y/[n]"
            
    while true; do
        read -r YN
        case "${YN:-n}" in
            y ) 
                if mkdir -p "$TASKSH_DIR"; then
                    echo "Successfully created TASKSH folder ($TASKSH_DIR)"
                    if echo "TASKSH_DIR=\"$TASKSH_DIR\"" >> $CONFIG; then
                        echo "Successfully added TASKSH_DIR to TASKSH config"
                    else
                        echo "FAILED to add TASKSH_DIR to TASKSH config"
                        exit 1
                    fi
                else
                    echo "FAILED TO create TASKSH folder ($TASKSH_DIR)"
                    exit 1
                fi

                break
                ;;

            n ) 
                echo "TASKSH requires a folder to function, exiting"

                exit 1
                ;;

            * ) echo "Invalid response, input y or n";;
        esac
    done
}

# Handle configuration
configure

# Mode functions
add() {
    shift
    SHORT=h
    LONG=help
    OPTS=$(getopt -n "$NAME" -o $SHORT -l $LONG -- "$@")
    if [ $? -ne -0 ]; then
        exit 1
    fi
    echo "$@"
    echo "$OPTS"
}


# PARSE CLI
if [ "$#" -eq 0 ]; then
    default
fi


## Parse Modes
case "$1" in

    a | add ) # TODO
        add "$@"
        ;;
    
    ag | agenda )
        echo TODO agenda
        ;;

    c | config )
        echo TODO config
        ;;

    e | edit )
        echo TODO edit
        ;;

    l | list )
        echo TODO list
        ;;

    v | view )
        echo TODO view
        ;;

    -h | --help )
        help
        ;;

    -v | --version )
        echo v$VERSION
        exit 0
        ;;

    * )
        echo "ERROR: Invalid mode, see --help (-h)" 
        exit 1       
esac

# eval set -- "$OPTS"

# while :; do
#     case "$1" in 

#     -h | --help)
#         help
#         ;;

#     --)
#         shift
#         break
#         ;;

#     *)
#         echo "Unexpected option: $1"
#         default
#         ;;

#     esac
# done

# # run

